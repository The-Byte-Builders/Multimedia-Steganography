{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":21,"metadata":{"id":"BnH8ezc7HfoV","executionInfo":{"status":"ok","timestamp":1675848005005,"user_tz":-345,"elapsed":5,"user":{"displayName":"Manohar Dahal","userId":"04014046240579136312"}}},"outputs":[],"source":["import os \n","import shutil\n","import random\n","import pandas as pd \n","import torch \n","from torchvision import transforms\n","from PIL import Image "]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m5IZkOmuKFS9","executionInfo":{"status":"ok","timestamp":1675845227230,"user_tz":-345,"elapsed":20425,"user":{"displayName":"Manohar Dahal","userId":"04014046240579136312"}},"outputId":"720781ad-7f4f-410e-a484-38e39e5f7be8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["root_dir = '/content/drive/MyDrive/Colab Notebooks'\n","dataset_folder = 'Steganography/new_Dataset'\n","dataset_path = os.path.join(root_dir,dataset_folder)\n","\n"],"metadata":{"id":"P9S4xJVpHxWs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["secret_img_list =  os.listdir(os.path.join(dataset_path,'secret'))\n","cover_img_list =  os.listdir(os.path.join(dataset_path,'cover'))\n","\n"],"metadata":{"id":"uVRicoDNKgJv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in range(len(secret_img_list)):\n","  im = Image.open(os.path.join(dataset_path, 'secret' , secret_img_list[i]))\n","  if im.mode == 'L':\n","    os.remove(os.path.join(dataset_path, 'secret' , secret_img_list[i]))\n","\n","for i in range(len(cover_img_list)):\n","  im = Image.open(os.path.join(dataset_path, 'cover' , cover_img_list[i]))\n","  if im.mode == 'L':\n","    os.remove(os.path.join(dataset_path, 'cover' , cover_img_list[i]))\n"],"metadata":{"id":"LFVH4jWxVBkH","executionInfo":{"status":"ok","timestamp":1675853240352,"user_tz":-345,"elapsed":4096832,"user":{"displayName":"Manohar Dahal","userId":"04014046240579136312"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["secret_img_list =  os.listdir(os.path.join(dataset_path,'secret'))\n","cover_img_list =  os.listdir(os.path.join(dataset_path,'cover'))"],"metadata":{"id":"j0FAFBBfpAB5","executionInfo":{"status":"ok","timestamp":1675853318060,"user_tz":-345,"elapsed":692,"user":{"displayName":"Manohar Dahal","userId":"04014046240579136312"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["print('number of secret images : ' , len(secret_img_list) , '\\n' , 'number of cover images: ' , len(cover_img_list) )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R6Vo7yOvx9ne","executionInfo":{"status":"ok","timestamp":1675853320670,"user_tz":-345,"elapsed":5,"user":{"displayName":"Manohar Dahal","userId":"04014046240579136312"}},"outputId":"53aaadfa-a70d-45b9-bd87-52abbb214658"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["number of secret images :  9832 \n"," number of cover images:  9880\n"]}]},{"cell_type":"code","source":["pairs = min(len(secret_img_list),len(cover_img_list))"],"metadata":{"id":"FRvlfjbvpQWZ","executionInfo":{"status":"ok","timestamp":1675853415576,"user_tz":-345,"elapsed":898,"user":{"displayName":"Manohar Dahal","userId":"04014046240579136312"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["pairs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wc95jdAdpc8i","executionInfo":{"status":"ok","timestamp":1675853424115,"user_tz":-345,"elapsed":3,"user":{"displayName":"Manohar Dahal","userId":"04014046240579136312"}},"outputId":"b39fa1f5-0f4b-4807-fff5-2e6eeafe074c"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["9832"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["dataset = []\n","for i in range(pairs):\n","    dataset.append({\n","        'cover_image':cover_img_list[i],\n","        'secret_image':secret_img_list[i]\n","    })\n"],"metadata":{"id":"Ac-LI2LolLVl","executionInfo":{"status":"ok","timestamp":1675853433178,"user_tz":-345,"elapsed":392,"user":{"displayName":"Manohar Dahal","userId":"04014046240579136312"}}},"execution_count":44,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"ywXsr9GHU4Mi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dataframe = pd.DataFrame(dataset)\n","dataframe.to_csv(os.path.join(root_dir,'train_dataset.csv'))"],"metadata":{"id":"CQytMUJal1hL","executionInfo":{"status":"ok","timestamp":1675853435428,"user_tz":-345,"elapsed":2,"user":{"displayName":"Manohar Dahal","userId":"04014046240579136312"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"hvoy6KqDfHw6","executionInfo":{"status":"ok","timestamp":1675853437744,"user_tz":-345,"elapsed":4,"user":{"displayName":"Manohar Dahal","userId":"04014046240579136312"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["dataset = pd.read_csv(\"/content/drive/MyDrive/Colab Notebooks/train_dataset.csv\")"],"metadata":{"id":"pY2NlzkofKpP","executionInfo":{"status":"ok","timestamp":1675853439683,"user_tz":-345,"elapsed":2,"user":{"displayName":"Manohar Dahal","userId":"04014046240579136312"}}},"execution_count":47,"outputs":[]},{"cell_type":"code","source":["dataset"],"metadata":{"id":"4SN9YlBqfryB","executionInfo":{"status":"ok","timestamp":1675853441632,"user_tz":-345,"elapsed":7,"user":{"displayName":"Manohar Dahal","userId":"04014046240579136312"}},"outputId":"e4e7ce09-87d1-47a9-cc1d-7be5ff88cb7f","colab":{"base_uri":"https://localhost:8080/","height":424}},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Unnamed: 0     cover_image   secret_image\n","0              0  test_8595.JPEG  val_8692.JPEG\n","1              1   test_923.JPEG  val_7617.JPEG\n","2              2  test_8842.JPEG  val_7309.JPEG\n","3              3  test_9147.JPEG  val_9456.JPEG\n","4              4  test_9071.JPEG  val_7795.JPEG\n","...          ...             ...            ...\n","9827        9827  test_1007.JPEG  val_4498.JPEG\n","9828        9828  test_1002.JPEG  val_3645.JPEG\n","9829        9829  test_1346.JPEG  val_3164.JPEG\n","9830        9830  test_1413.JPEG  val_4065.JPEG\n","9831        9831  test_1380.JPEG  val_3094.JPEG\n","\n","[9832 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-63e6084b-1f88-42f6-bbc6-f7bb07b6736f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>cover_image</th>\n","      <th>secret_image</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>test_8595.JPEG</td>\n","      <td>val_8692.JPEG</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>test_923.JPEG</td>\n","      <td>val_7617.JPEG</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>test_8842.JPEG</td>\n","      <td>val_7309.JPEG</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>test_9147.JPEG</td>\n","      <td>val_9456.JPEG</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>test_9071.JPEG</td>\n","      <td>val_7795.JPEG</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9827</th>\n","      <td>9827</td>\n","      <td>test_1007.JPEG</td>\n","      <td>val_4498.JPEG</td>\n","    </tr>\n","    <tr>\n","      <th>9828</th>\n","      <td>9828</td>\n","      <td>test_1002.JPEG</td>\n","      <td>val_3645.JPEG</td>\n","    </tr>\n","    <tr>\n","      <th>9829</th>\n","      <td>9829</td>\n","      <td>test_1346.JPEG</td>\n","      <td>val_3164.JPEG</td>\n","    </tr>\n","    <tr>\n","      <th>9830</th>\n","      <td>9830</td>\n","      <td>test_1413.JPEG</td>\n","      <td>val_4065.JPEG</td>\n","    </tr>\n","    <tr>\n","      <th>9831</th>\n","      <td>9831</td>\n","      <td>test_1380.JPEG</td>\n","      <td>val_3094.JPEG</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>9832 rows Ã— 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-63e6084b-1f88-42f6-bbc6-f7bb07b6736f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-63e6084b-1f88-42f6-bbc6-f7bb07b6736f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-63e6084b-1f88-42f6-bbc6-f7bb07b6736f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["validation_images = os.listdir(valid_dir)\n","cover_images= validation_images[:1200]\n","secret_images = validation_images[1200:]\n","dataset = []\n","for i in range(1200):\n","    dataset.append({\n","        'cover_image':cover_images[i],\n","        'secret_image':secret_images[i]\n","    })\n","dataframe = pd.DataFrame(dataset)\n","dataframe.to_csv(os.path.join(root_dir,'validation_dataset.csv'))"],"metadata":{"id":"wxIrBMR5mWLE"},"execution_count":null,"outputs":[]}]}